{"ast":null,"code":"var _jsxFileName = \"/home/lsteam/scopify/scopify/src/components/LandingPage/LandingPage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { withRouter } from \"react-router\";\nimport { Button } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Divider } from \"semantic-ui-react\";\nimport SpotifyLogin from \"react-spotify-login\";\nimport { clientId, redirectUri } from \"./settings\";\nimport { AuthContext } from \"../AuthContext\";\nimport \"../GlobalStyle.css\";\n\nconst onSuccess = response => console.log(response);\n\nconst onFailure = response => console.error(response);\n\nconst LandingPage = props => {\n  const {\n    loggedIn,\n    accessToken,\n    setLoggedIn,\n    setToken\n  } = useContext(AuthContext);\n  const [isLoaded, setLoaded] = useState(false);\n  useEffect(() => {\n    setLoaded(true);\n  });\n  return React.createElement(CSSTransition, {\n    classNames: \"fade\",\n    timeout: {\n      enter: 500,\n      exit: 300\n    },\n    display: isLoaded,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      display: \"flex\",\n      background: \"rgb(127,24,161)\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    style: {\n      fontSize: \"10rem\",\n      margin: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"\\uD835\\uDD7E\\uD835\\uDD88\\uD835\\uDD94\\uD835\\uDD95\\uD835\\uDD8E\\uD835\\uDD8B\\uD835\\uDD9E\"), React.createElement(\"p\", {\n    style: {\n      fontSize: \"2rem\",\n      margin: \"1rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Horoscoped Playlists\"), !loggedIn ? React.createElement(Button, {\n    as: SpotifyLogin,\n    clientId: clientId,\n    redirectUri: redirectUri,\n    scope: \"playlist-modify-public,playlist-modify-private,user-top-read\",\n    onSuccess: response => {\n      setToken(response.access_token);\n      setLoggedIn(true);\n      console.log(accessToken);\n      console.log(response.access_token);\n    },\n    onFailure: onFailure,\n    content: \"Log In to Spotify\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(Button, {\n    as: Link,\n    onClick: () => setLoaded(false),\n    to: \"/step1\",\n    size: \"massive\",\n    style: {\n      margin: \"1rem\"\n    },\n    content: \"Get Started\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nLandingPage.propTypes = {};\nexport default withRouter(LandingPage);","map":{"version":3,"sources":["/home/lsteam/scopify/scopify/src/components/LandingPage/LandingPage.js"],"names":["React","useState","useEffect","useContext","PropTypes","Link","Particles","CSSTransition","withRouter","Button","Container","Header","Divider","SpotifyLogin","clientId","redirectUri","AuthContext","onSuccess","response","console","log","onFailure","error","LandingPage","props","loggedIn","accessToken","setLoggedIn","setToken","isLoaded","setLoaded","enter","exit","display","background","flexDirection","alignItems","justifyContent","height","fontSize","margin","access_token","propTypes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"react-router-dom\"\nimport Particles from \"react-particles-js\"\nimport {CSSTransition} from \"react-transition-group\"\nimport {withRouter} from \"react-router\"\n\nimport {Button} from \"semantic-ui-react\"\nimport {Container} from \"semantic-ui-react\"\nimport {Header} from \"semantic-ui-react\"\nimport {Divider} from \"semantic-ui-react\"\nimport SpotifyLogin from \"react-spotify-login\"\nimport {clientId, redirectUri} from \"./settings\"\nimport {AuthContext} from \"../AuthContext\"\n\nimport \"../GlobalStyle.css\"\n\nconst onSuccess = response => console.log(response)\nconst onFailure = response => console.error(response)\n\nconst LandingPage = (props) => {\n    const {loggedIn, accessToken, setLoggedIn, setToken} = useContext(AuthContext)\n    const [isLoaded, setLoaded] = useState(false)\n\n    useEffect(() => {\n        setLoaded(true)\n    })\n\n    return (\n        <CSSTransition classNames='fade' timeout={{enter: 500, exit: 300}} display={isLoaded}> \n          <Container \n            style={{\n              display: \"flex\", \n              background: \"rgb(127,24,161)\",\n              flexDirection: \"column\", \n              alignItems: \"center\", \n              justifyContent: \"center\", \n              height: \"100vh\",\n            }} \n          >\n            <Header as='h1' style={{fontSize: \"10rem\", margin: \"1rem\"}}>\n              𝕾𝖈𝖔𝖕𝖎𝖋𝖞\n            </Header>\n            <p style={{fontSize: \"2rem\", margin: \"1rem\"}}> \n              Horoscoped Playlists \n            </p>\n            {!loggedIn ? (\n              <Button \n                as={SpotifyLogin} \n                clientId={clientId}\n                redirectUri={redirectUri}\n                scope={\"playlist-modify-public,playlist-modify-private,user-top-read\"}\n                onSuccess={(response) => {\n                  setToken(response.access_token)\n                  setLoggedIn(true)\n                  console.log(accessToken)\n                  console.log(response.access_token)\n                }}\n                onFailure={onFailure}\n                content='Log In to Spotify'/>\n            ) : (\n              <Button \n                as={ Link }\n                onClick={() => setLoaded(false)}\n                to='/step1' \n                size='massive'\n                style={{margin: \"1rem\"}} \n                content='Get Started' />\n            )}\n            <Divider />\n        </Container>\n      </CSSTransition>\n    )\n}\n\nLandingPage.propTypes = {\n}\n\nexport default withRouter(LandingPage)\n"]},"metadata":{},"sourceType":"module"}