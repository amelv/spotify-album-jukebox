{"ast":null,"code":"var _jsxFileName = \"/home/lsteam/scopify/scopify/src/components/GeneratorPage/GeneratorPage.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Particles from \"react-particles-js\";\nimport styled from \"styled-components\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { withRouter } from \"react-router\";\nimport { Button } from \"semantic-ui-react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Header } from \"semantic-ui-react\";\nimport { Divider } from \"semantic-ui-react\";\nimport { Grid, Image, Input } from \"semantic-ui-react\";\nimport _ from \"lodash\";\nimport \"./style.css\";\nimport \"../GlobalStyle.css\";\nimport Slider from \"react-input-slider\";\nimport Spotify from \"spotify-web-api-js\";\nimport { AuthContext } from \"../AuthContext\";\nimport Generator from \"../Generator/Generator\";\nconst spotifyWebApi = new Spotify();\n\nconst HoroscopeInput = props => {\n  let zodiacIcons = [\"♈\", \"♉\", \"♊\", \"♋\", \"♌\", \"♍\", \"♎\", \"♏\", \"♐\", \"♑\", \"♒\", \"♓\"];\n  let zodiacNames = [\"Aries\", \"Taurus\", \"Gemini\", \"Cancer\", \"Leo\", \"Virgo\", \"Libra\", \"Scorpio\", \"Sagittarius\", \"Capricorn\", \"Aquarius\", \"Pisces\"];\n\n  const handleClick = e => {\n    let val = e.target.value;\n    props.setSign(val);\n  };\n\n  let grid = _.times(3, row => React.createElement(Grid.Row, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      textAlign: \"center\",\n      flexWrap: \"nowrap\"\n    },\n    key: row,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, _.times(4, col => {\n    let pos = 4 * row + col;\n    return React.createElement(Grid.Column, {\n      key: pos,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\",\n        flexWrap: \"nowrap\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: e => {\n        props.setSign(zodiacNames[4 * row + col]);\n      },\n      value: zodiacNames[pos],\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        color: \"transparent\",\n        width: \"150px\",\n        height: \"150px\"\n      },\n      as: Link,\n      to: \"/step2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, zodiacIcons[pos]), React.createElement(Header, {\n      as: \"h3\",\n      style: {\n        pointerEvents: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, zodiacNames[pos])));\n  })));\n\n  return React.createElement(Grid, {\n    columns: 4,\n    divided: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, grid);\n};\n\nconst MoodInput = props => {\n  const [value, setValue] = useState({\n    x: 50,\n    y: 50\n  });\n\n  const handleValueChange = e => {\n    let value = parseInt(e.target.value);\n\n    if (!value) {\n      value = 0;\n    }\n\n    setValue(e.target.value);\n  };\n\n  return React.createElement(Container, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    style: {\n      marginBottom: \"5%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Mood\"), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    floated: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Angry\"), React.createElement(\"span\", {\n    style: {\n      display: \"inline-block\",\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }), React.createElement(Header, {\n    as: \"h1\",\n    floated: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Bright\")), React.createElement(Slider, {\n    style: {\n      width: 440,\n      height: 400\n    },\n    axis: \"xy\",\n    x: value.x,\n    y: value.y,\n    onChange: setValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      alignItems: \"flex-end\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    floated: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Melancholic\"), React.createElement(\"span\", {\n    style: {\n      display: \"inline-block\",\n      width: 400\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), React.createElement(Header, {\n    as: \"h1\",\n    floated: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"Calm\")), React.createElement(Button, {\n    as: Link,\n    onClick: e => {\n      props.setValence(value.x / 100.0);\n      props.setEnergy(value.y / 100.0);\n    },\n    to: \"/step3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, \"Next Step\"));\n};\n\nconst NameInput = props => {\n  const [value, setValue] = useState(\"\");\n\n  const handleValueChange = e => {\n    let value = e.target.value;\n\n    if (!value) {\n      value = \"\";\n    }\n\n    setValue(value);\n  };\n\n  return React.createElement(Container, {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Mood\"), React.createElement(Input, {\n    focus: true,\n    onChange: handleValueChange,\n    placeholder: \"Enter playlist name...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(Button, {\n    as: Link,\n    onClick: e => {\n      props.setName(value);\n    },\n    to: \"/step4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Generate Playlist\"));\n};\n\nconst Finished = props => {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Header, {\n    as: \"h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Check your spotify for the playlist!\"), React.createElement(Generator, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  })));\n};\n\nconst GeneratorPage = props => {\n  const [zodiacSign, setSign] = useState(\"\");\n  const [valence, setValence] = useState(0.5);\n  const [energy, setEnergy] = useState(0.5);\n  const [name, setName] = useState(\"\");\n  const [isLoaded, setLoaded] = useState(false);\n  let num = props.match.params.num;\n  let inputs = [HoroscopeInput, MoodInput, NameInput, Finished];\n  let InputComponent = inputs[num - 1];\n  useEffect(() => {\n    setLoaded(true);\n  }, [isLoaded]);\n  return React.createElement(CSSTransition, {\n    classNames: \"fade\",\n    timeout: {\n      enter: 500,\n      exit: 300\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Container, {\n    style: {\n      display: \"flex\",\n      background: \"rgb(127,24,161)\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, num < 4 ? React.createElement(InputComponent, {\n    setSign: setSign,\n    setValence: setValence,\n    setEnergy: setEnergy,\n    setName: setName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }) : React.createElement(InputComponent, {\n    zodiacSign: zodiacSign,\n    valence: valence,\n    energy: energy,\n    playlistName: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  })));\n};\n\nGeneratorPage.propTypes = {};\nexport default GeneratorPage;","map":{"version":3,"sources":["/home/lsteam/scopify/scopify/src/components/GeneratorPage/GeneratorPage.js"],"names":["React","useState","useEffect","useContext","PropTypes","Link","Particles","styled","CSSTransition","withRouter","Button","Container","Header","Divider","Grid","Image","Input","_","Slider","Spotify","AuthContext","Generator","spotifyWebApi","HoroscopeInput","props","zodiacIcons","zodiacNames","handleClick","e","val","target","value","setSign","grid","times","row","display","flexDirection","alignItems","textAlign","flexWrap","col","pos","alignContent","color","width","height","pointerEvents","MoodInput","setValue","x","y","handleValueChange","parseInt","marginBottom","setValence","setEnergy","NameInput","setName","Finished","GeneratorPage","zodiacSign","valence","energy","name","isLoaded","setLoaded","num","match","params","inputs","InputComponent","enter","exit","background","justifyContent","propTypes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"react-router-dom\"\nimport Particles from \"react-particles-js\"\nimport styled from \"styled-components\"\nimport {CSSTransition} from \"react-transition-group\"\nimport {withRouter} from \"react-router\"\n\nimport {Button} from \"semantic-ui-react\"\nimport {Container} from \"semantic-ui-react\"\nimport {Header} from \"semantic-ui-react\"\nimport {Divider} from \"semantic-ui-react\"\nimport {Grid, Image, Input} from \"semantic-ui-react\"\nimport _ from \"lodash\"\n\nimport \"./style.css\"\nimport \"../GlobalStyle.css\"\nimport Slider from \"react-input-slider\"\n\nimport Spotify from \"spotify-web-api-js\"\n\nimport {AuthContext} from \"../AuthContext\"\nimport Generator from \"../Generator/Generator\"\n\nconst spotifyWebApi = new Spotify()\n\nconst HoroscopeInput = (props) => {\n    let zodiacIcons = [\"♈\", \"♉\", \"♊\", \"♋\", \"♌\", \"♍\", \"♎\", \"♏\", \"♐\", \"♑\", \"♒\", \"♓\"]\n    let zodiacNames = [\"Aries\", \"Taurus\", \"Gemini\", \"Cancer\", \"Leo\", \"Virgo\", \"Libra\", \"Scorpio\", \"Sagittarius\", \"Capricorn\", \"Aquarius\", \"Pisces\"]\n  \n    const handleClick = (e) => {\n        let val = e.target.value\n        props.setSign(val)\n    }\n\n    let grid = _.times(3, (row) => (\n      <Grid.Row \n        style={{\n          display: \"flex\", \n          flexDirection: \"row\", \n          alignItems: \"center\", \n          textAlign: \"center\", \n          flexWrap: \"nowrap\"\n        }} \n        key={row}\n      >\n        {_.times(4, (col) => {\n          let pos = 4*row + col\n          return (\n            <Grid.Column \n              key={pos} \n              style={{\n                display: \"flex\", \n                flexDirection: \"column\", \n                alignItems: \"center\", \n                textAlign: \"center\", \n                flexWrap: \"nowrap\"\n              }}>\n              <Button \n                onClick={(e) => {\n                  props.setSign(zodiacNames[4*row + col])\n                }}\n                value={zodiacNames[pos]} \n                style={{\n                  display: \"flex\", \n                  flexDirection: \"column\", \n                  alignItems: \"center\", \n                  alignContent: \"center\", \n                  color: \"transparent\", \n                  width: \"150px\", \n                  height: \"150px\"\n                }} \n                as={Link} \n                to='/step2'\n              >\n                <Header as='h1' style={{pointerEvents: \"none\"}}>\n                  {zodiacIcons[pos]}\n                </Header>\n                <Header as='h3' style={{pointerEvents: \"none\"}}>\n                  {zodiacNames[pos]}\n                </Header>\n              </Button>\n            </Grid.Column>\n        )})}\n      </Grid.Row> \n    ))\n  \n    return (\n        <Grid columns={4} divided>\n            {grid}\n        </Grid>\n    )\n}\n\nconst MoodInput = (props) => {\n    const [value, setValue] = useState({x: 50, y: 50})\n\n    const handleValueChange = e => {\n        let value = parseInt(e.target.value)\n    \n        if (!value) {\n            value = 0\n        }\n\n        setValue(e.target.value)\n    }\n\n    return (\n      <Container \n        style={{\n          display: \"flex\", \n          flexDirection: \"column\", \n          alignItems: \"center\", \n          textAlign: \"center\"\n        }}\n      >\n        <Header as='h1' style={{marginBottom: \"5%\"}} >Mood</Header>\n        <div \n          style={{\n            display: \"flex\",\n            flexDirection: \"row\", \n            alignItems: \"flex-end\"\n          }}\n        >\n          <Header as='h1' floated='left'>Angry</Header>\n          <span style={{display: \"inline-block\", width: 400}} />\n          <Header as='h1' floated='right' >Bright</Header>\n        </div>\n\n        <Slider style={{width: 440, height: 400}} axis=\"xy\" x={value.x} y={value.y} onChange={setValue} />    \n\n        <div style={{display: \"flex\" ,flexDirection: \"row\", alignItems: \"flex-end\"}}>\n          <Header as='h1' floated='left' >Melancholic</Header>\n          <span style={{display: \"inline-block\", width: 400}} />\n          <Header as='h1' floated='right' >Calm</Header>\n        </div>\n        <Button as={Link} \n          onClick={(e) => {\n            props.setValence(value.x / 100.0)\n            props.setEnergy(value.y / 100.0)\n          }}\n          to='/step3'\n        >\n          Next Step\n        </Button> \n      </Container>\n    )\n}\n\n\nconst NameInput = (props) => {\n    const [value, setValue] = useState(\"\")\n\n\n    const handleValueChange = e => {\n        let value = e.target.value\n    \n        if (!value) {\n            value = \"\"\n        }\n\n        setValue(value)\n    }\n\n    return (\n      <Container \n        style={{\n          display: \"flex\", \n          flexDirection: \"column\", \n          alignItems: \"center\", \n          textAlign: \"center\"\n        }}>\n            <Header as='h1'>Mood</Header>\n            <Input focus onChange={handleValueChange} placeholder='Enter playlist name...' />\n            <Button as={Link} \n                onClick={(e) => {\n                    props.setName(value)\n                }} \n                to='/step4'>Generate Playlist</Button> \n      </Container>\n\n    ) \n}\n\nconst Finished = (props) => {\n  \n    return (\n        <Container>\n            <Header as='h1' >\n              Check your spotify for the playlist!\n            </Header>\n            <Generator {...props} />\n        </Container>\n    )\n}\n\nconst GeneratorPage = (props) => {\n    const [zodiacSign, setSign] = useState(\"\")\n    const [valence, setValence] = useState(0.5)\n    const [energy, setEnergy] = useState(0.5)\n    const [name, setName] = useState(\"\")\n    const [isLoaded, setLoaded] = useState(false)\n\n    let num = props.match.params.num\n  \n    let inputs = [HoroscopeInput, MoodInput, NameInput, Finished]\n\n    let InputComponent = inputs[num-1]\n\n    useEffect(() => {\n        setLoaded(true)\n    }, [isLoaded])\n\n    return (\n        <CSSTransition classNames='fade' timeout={{enter: 500, exit: 300}} >\n          <Container \n            style={{\n              display: \"flex\", \n              background: \"rgb(127,24,161)\", \n              flexDirection: \"column\", \n              alignItems: \"center\", \n              justifyContent: \"center\", \n              height: \"100vh\"\n            }} >\n              {num < 4 ? (\n                <InputComponent setSign={setSign} setValence={setValence}\n                setEnergy={setEnergy} setName={setName} />\n              ) : (\n                <InputComponent zodiacSign={zodiacSign} valence={valence}\n                energy={energy} playlistName={name} />\n              )}\n               <Divider />\n          </Container> \n        </CSSTransition>\n    )\n}\n\nGeneratorPage.propTypes = {\n}\n\nexport default GeneratorPage\n"]},"metadata":{},"sourceType":"module"}