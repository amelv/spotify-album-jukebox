{"ast":null,"code":"var _jsxFileName = \"/home/lsteam/scopify/scopify/src/components/Generator/Generator.js\";\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { withRouter } from \"react-router\";\nimport Q from \"q\";\nimport Slider from \"react-input-slider\";\nimport Spotify from \"spotify-web-api-js\";\nimport { AuthContext } from \"../AuthContext\";\nconst spotifyApi = new Spotify();\n\nconst Generator = props => {\n  const {\n    loggedIn,\n    accessToken,\n    setLoggedIn,\n    setToken\n  } = useContext(AuthContext);\n  const {\n    zodiacSign,\n    valence,\n    energy,\n    playlistName\n  } = props;\n  spotifyApi.setAccessToken(accessToken);\n  spotifyApi.setPromiseImplementation(Q);\n  let userId = \"\";\n  let playlistId = \"\";\n  let message = \"\";\n  let playlistOptions = {\n    name: playlistName,\n    description: \"Your Daily Horoscope in Music Form\",\n    public: false\n  };\n  console.log(energy);\n  spotifyApi.getMe().then(data => {\n    console.log(data);\n    return data.id;\n  }).then(userId => {\n    console.log(userId);\n    return spotifyApi.createPlaylist(userId, playlistOptions);\n  }).then(data => {\n    playlistId = data.id;\n    return spotifyApi.getMyTopArtists({\n      limit: 5\n    });\n  }).then(data => {\n    console.log(data);\n    return data.items.map(artist => {\n      return artist.id;\n    });\n  }).then(topArtists => {\n    console.log(topArtists);\n    let recOptions = {\n      limit: 20,\n      seed_artists: topArtists,\n      target_valence: valence,\n      target_energy: energy\n    };\n    return spotifyApi.getRecommendations(recOptions);\n  }).then(data => {\n    console.log(data);\n    return data.tracks.map(track => {\n      return track.uri;\n    });\n  }).then(playlistTracks => {\n    console.log(playlistTracks);\n    return spotifyApi.addTracksToPlaylist(playlistId, playlistTracks);\n  }).then(data => {\n    message = data;\n    console.log(data);\n  }, error => {\n    console.error(error);\n  });\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Generated \", playlistName || \"missing\", \" playlist.\");\n};\n\nexport default Generator;","map":{"version":3,"sources":["/home/lsteam/scopify/scopify/src/components/Generator/Generator.js"],"names":["React","useState","useContext","PropTypes","Link","CSSTransition","withRouter","Q","Slider","Spotify","AuthContext","spotifyApi","Generator","props","loggedIn","accessToken","setLoggedIn","setToken","zodiacSign","valence","energy","playlistName","setAccessToken","setPromiseImplementation","userId","playlistId","message","playlistOptions","name","description","public","console","log","getMe","then","data","id","createPlaylist","getMyTopArtists","limit","items","map","artist","topArtists","recOptions","seed_artists","target_valence","target_energy","getRecommendations","tracks","track","uri","playlistTracks","addTracksToPlaylist","error"],"mappings":"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","sourcesContent":["import React, {useState, useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport {Link} from \"react-router-dom\"\nimport {CSSTransition} from \"react-transition-group\"\nimport {withRouter} from \"react-router\"\nimport Q from \"q\"\nimport Slider from \"react-input-slider\"\n\nimport Spotify from \"spotify-web-api-js\"\n\nimport {AuthContext} from \"../AuthContext\"\n\nconst spotifyApi = new Spotify()\n\n\nconst Generator = (props) => {\n    const {loggedIn, accessToken, setLoggedIn, setToken} = useContext(AuthContext)\n\n    const {zodiacSign, valence, energy, playlistName} = props\n  \n    spotifyApi.setAccessToken(accessToken)\n\n    spotifyApi.setPromiseImplementation(Q)\n  \n    let userId  = \"\"\n    let playlistId = \"\"\n\n    let message = \"\"\n  \n    let playlistOptions = {\n        name: playlistName,\n        description: \"Your Daily Horoscope in Music Form\",\n        public: false \n    }\n\n    console.log(energy)\n    spotifyApi.getMe()\n        .then((data) => {\n            console.log(data)\n            return data.id \n        })\n        .then((userId) => {\n            console.log(userId)\n            return spotifyApi.createPlaylist(userId, playlistOptions) \n        })\n        .then((data) => {\n            playlistId = data.id\n            return spotifyApi.getMyTopArtists({limit: 5})\n        })\n        .then((data) => {\n            console.log(data)\n            return data.items.map((artist) => {\n                return artist.id\n            })\n        })\n        .then((topArtists) => {\n            console.log(topArtists)\n            let recOptions = {\n                limit: 20,\n                seed_artists: topArtists,\n                target_valence: valence,\n                target_energy: energy\n            }\n            return spotifyApi.getRecommendations(recOptions)\n        }).then((data) => {\n            console.log(data)\n            return data.tracks.map((track) => {\n                return track.uri\n            })\n        })\n        .then((playlistTracks) => {\n            console.log(playlistTracks)\n            return spotifyApi.addTracksToPlaylist(playlistId, playlistTracks)\n        }).then((data) => {\n            message = data\n            console.log(data)\n        }, (error) => {\n            console.error(error)\n        })\n\n   \n    return (\n        <p>\n      Generated {playlistName || \"missing\"} playlist. \n        </p>\n    )\n\n}\n\nexport default Generator\n"]},"metadata":{},"sourceType":"module"}